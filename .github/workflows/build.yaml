name: Build

"on":
  "push":
    "tags":
      - "v*"
  "pull_request":

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Prepare environment
        run: |-
          RELEASE_VERSION="${GITHUB_REF##*/}"
          if [[ "${RELEASE_VERSION}" != v* ]]; then RELEASE_VERSION='dev'; fi
          echo "RELEASE_VERSION=\"${RELEASE_VERSION}@${GITHUB_SHA:0:10}\"" | tee -a $GITHUB_ENV
          go mod vendor

      # Test
      - name: Unit Testing
        run: go test -v ./live-broadcast-downloader/

      # Win
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=arm64 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=386 VERSION=${RELEASE_VERSION} make release

      # MacOS
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 VERSION=${RELEASE_VERSION} make release

      # Linux
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=5 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 VERSION=${RELEASE_VERSION} make release
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=386 VERSION=${RELEASE_VERSION} make release

      - run: ls -l build/live-broadcast-downloader-*

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload
        if: startsWith(github.ref, 'refs/tags/v')
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "build/live-broadcast-downloader-*.tar.gz;build/live-broadcast-downloader-*.zip"
          tags: true
          draft: false
