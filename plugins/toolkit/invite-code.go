package toolkit

import "errors"

var (
	inviteCodeDiv   = uint64(len(inviteCodeNames[0]))
	inviteCodeNames = []map[uint64]rune{
		{0: 'X', 1: 'Y', 2: 'A', 3: 'C', 4: 'R', 5: 'W', 6: 'B', 7: 'G', 8: '2', 9: 'H', 10: 'P', 11: 'M', 12: 'U', 13: '3', 14: 'I', 15: 'K', 16: '6', 17: 'J', 18: '5', 19: 'Z', 20: 'F', 21: 'T', 22: 'V', 23: '4', 24: 'L', 25: 'S', 26: 'N', 27: 'Q', 28: '7', 29: '8', 30: 'D', 31: 'E'},
		{0: '3', 1: 'I', 2: 'K', 3: 'M', 4: 'U', 5: 'J', 6: '5', 7: '6', 8: 'F', 9: 'T', 10: 'Z', 11: 'L', 12: 'S', 13: 'V', 14: '4', 15: '7', 16: '8', 17: 'D', 18: 'E', 19: 'N', 20: 'Q', 21: 'A', 22: 'C', 23: 'X', 24: 'Y', 25: 'B', 26: 'G', 27: 'R', 28: 'W', 29: 'H', 30: 'P', 31: '2'},
		{0: 'D', 1: 'E', 2: 'N', 3: 'Q', 4: '7', 5: '8', 6: 'A', 7: 'C', 8: 'X', 9: 'Y', 10: 'B', 11: 'G', 12: 'R', 13: 'W', 14: 'H', 15: 'P', 16: '2', 17: 'I', 18: 'K', 19: 'M', 20: 'U', 21: '3', 22: 'J', 23: '5', 24: '6', 25: 'F', 26: 'T', 27: 'Z', 28: 'L', 29: 'S', 30: 'V', 31: '4'},
		{0: '7', 1: '8', 2: 'D', 3: 'E', 4: 'N', 5: 'Q', 6: 'A', 7: 'C', 8: 'X', 9: 'Y', 10: 'B', 11: 'G', 12: 'R', 13: 'W', 14: 'H', 15: 'P', 16: '2', 17: '3', 18: 'I', 19: 'K', 20: 'M', 21: 'U', 22: 'J', 23: '5', 24: '6', 25: 'F', 26: 'T', 27: 'Z', 28: 'L', 29: 'S', 30: 'V', 31: '4'},
		{0: 'H', 1: 'P', 2: '2', 3: '3', 4: 'I', 5: 'K', 6: 'M', 7: 'U', 8: 'J', 9: '5', 10: '6', 11: 'F', 12: 'T', 13: 'Z', 14: 'L', 15: 'S', 16: 'V', 17: '4', 18: '7', 19: '8', 20: 'D', 21: 'E', 22: 'N', 23: 'Q', 24: 'A', 25: 'C', 26: 'X', 27: 'Y', 28: 'B', 29: 'G', 30: 'R', 31: 'W'},
		{0: 'L', 1: 'S', 2: 'V', 3: '4', 4: 'D', 5: 'E', 6: 'N', 7: 'Q', 8: '7', 9: '8', 10: 'A', 11: 'C', 12: 'X', 13: 'Y', 14: 'B', 15: 'G', 16: 'R', 17: 'W', 18: 'H', 19: 'P', 20: '2', 21: 'I', 22: 'K', 23: 'M', 24: 'U', 25: '3', 26: 'J', 27: '5', 28: '6', 29: 'F', 30: 'T', 31: 'Z'},
		{0: 'J', 1: '5', 2: '6', 3: 'F', 4: 'T', 5: 'Z', 6: 'L', 7: 'S', 8: 'V', 9: '4', 10: '7', 11: '8', 12: 'D', 13: 'E', 14: 'N', 15: 'Q', 16: 'A', 17: 'C', 18: 'X', 19: 'Y', 20: 'B', 21: 'G', 22: 'R', 23: 'W', 24: 'H', 25: 'P', 26: '2', 27: '3', 28: 'I', 29: 'K', 30: 'M', 31: 'U'},
		{0: '2', 1: 'H', 2: 'P', 3: 'M', 4: 'U', 5: '3', 6: 'I', 7: 'K', 8: '6', 9: 'J', 10: '5', 11: 'Z', 12: 'F', 13: 'T', 14: 'V', 15: '4', 16: 'L', 17: 'S', 18: 'N', 19: 'Q', 20: '7', 21: '8', 22: 'D', 23: 'E', 24: 'X', 25: 'Y', 26: 'A', 27: 'C', 28: 'R', 29: 'W', 30: 'B', 31: 'G'},
		{0: 'H', 1: 'P', 2: '2', 3: 'I', 4: 'K', 5: 'M', 6: 'U', 7: '3', 8: 'J', 9: '5', 10: '6', 11: 'F', 12: 'T', 13: 'Z', 14: 'L', 15: 'S', 16: 'V', 17: '4', 18: 'D', 19: 'E', 20: 'N', 21: 'Q', 22: '7', 23: '8', 24: 'A', 25: 'C', 26: 'X', 27: 'Y', 28: 'B', 29: 'G', 30: 'R', 31: 'W'},
		{0: '5', 1: '6', 2: 'J', 3: 'T', 4: 'Z', 5: 'F', 6: 'S', 7: 'V', 8: '4', 9: 'L', 10: 'E', 11: 'N', 12: 'Q', 13: '7', 14: '8', 15: 'D', 16: 'C', 17: 'X', 18: 'Y', 19: 'A', 20: 'G', 21: 'R', 22: 'W', 23: 'B', 24: 'P', 25: '2', 26: 'H', 27: 'K', 28: 'M', 29: 'U', 30: '3', 31: 'I'},
		{0: 'J', 1: '5', 2: '6', 3: 'F', 4: 'T', 5: 'Z', 6: 'L', 7: 'S', 8: 'V', 9: '4', 10: '8', 11: 'D', 12: 'E', 13: 'N', 14: 'Q', 15: '7', 16: 'A', 17: 'C', 18: 'X', 19: 'Y', 20: 'B', 21: 'G', 22: 'R', 23: 'W', 24: 'H', 25: 'P', 26: '2', 27: 'I', 28: 'K', 29: 'M', 30: 'U', 31: '3'},
		{0: 'F', 1: 'T', 2: 'Z', 3: 'L', 4: 'S', 5: 'V', 6: '4', 7: '7', 8: '8', 9: 'D', 10: 'E', 11: 'N', 12: 'Q', 13: 'A', 14: 'C', 15: 'X', 16: 'Y', 17: 'B', 18: 'G', 19: 'R', 20: 'W', 21: 'H', 22: 'P', 23: '2', 24: '3', 25: 'I', 26: 'K', 27: 'M', 28: 'U', 29: 'J', 30: '5', 31: '6'},
		{0: 'F', 1: 'T', 2: 'Z', 3: 'L', 4: 'S', 5: 'V', 6: '4', 7: 'D', 8: 'E', 9: 'N', 10: 'Q', 11: '7', 12: '8', 13: 'A', 14: 'C', 15: 'X', 16: 'Y', 17: 'B', 18: 'G', 19: 'R', 20: 'W', 21: 'H', 22: 'P', 23: '2', 24: 'I', 25: 'K', 26: 'M', 27: 'U', 28: '3', 29: 'J', 30: '5', 31: '6'},
		{0: 'B', 1: 'G', 2: 'R', 3: 'W', 4: 'H', 5: 'P', 6: '2', 7: 'I', 8: 'K', 9: 'M', 10: 'U', 11: '3', 12: 'J', 13: '5', 14: '6', 15: 'F', 16: 'T', 17: 'Z', 18: 'L', 19: 'S', 20: 'V', 21: '4', 22: '8', 23: 'D', 24: 'E', 25: 'N', 26: 'Q', 27: '7', 28: 'A', 29: 'C', 30: 'X', 31: 'Y'},
		{0: '8', 1: 'D', 2: 'E', 3: 'N', 4: 'Q', 5: '7', 6: 'A', 7: 'C', 8: 'X', 9: 'Y', 10: 'B', 11: 'G', 12: 'R', 13: 'W', 14: 'H', 15: 'P', 16: '2', 17: 'I', 18: 'K', 19: 'M', 20: 'U', 21: '3', 22: 'J', 23: '5', 24: '6', 25: 'F', 26: 'T', 27: 'Z', 28: 'L', 29: 'S', 30: 'V', 31: '4'},
		{0: 'P', 1: '2', 2: 'H', 3: 'K', 4: 'M', 5: 'U', 6: '3', 7: 'I', 8: '5', 9: '6', 10: 'J', 11: 'T', 12: 'Z', 13: 'F', 14: 'S', 15: 'V', 16: '4', 17: 'L', 18: 'E', 19: 'N', 20: 'Q', 21: '7', 22: '8', 23: 'D', 24: 'C', 25: 'X', 26: 'Y', 27: 'A', 28: 'G', 29: 'R', 30: 'W', 31: 'B'},
		{0: 'F', 1: 'T', 2: 'Z', 3: '4', 4: 'L', 5: 'S', 6: 'V', 7: 'Q', 8: '7', 9: '8', 10: 'D', 11: 'E', 12: 'N', 13: 'Y', 14: 'A', 15: 'C', 16: 'X', 17: 'W', 18: 'B', 19: 'G', 20: 'R', 21: 'H', 22: 'P', 23: '2', 24: 'U', 25: '3', 26: 'I', 27: 'K', 28: 'M', 29: 'J', 30: '5', 31: '6'},
		{0: 'Z', 1: 'F', 2: 'T', 3: 'V', 4: '4', 5: 'L', 6: 'S', 7: 'N', 8: 'Q', 9: '7', 10: '8', 11: 'D', 12: 'E', 13: 'X', 14: 'Y', 15: 'A', 16: 'C', 17: 'R', 18: 'W', 19: 'B', 20: 'G', 21: '2', 22: 'H', 23: 'P', 24: 'M', 25: 'U', 26: '3', 27: 'I', 28: 'K', 29: '6', 30: 'J', 31: '5'},
		{0: 'J', 1: '5', 2: '6', 3: 'F', 4: 'T', 5: 'Z', 6: 'L', 7: 'S', 8: 'V', 9: '4', 10: 'D', 11: 'E', 12: 'N', 13: 'Q', 14: '7', 15: '8', 16: 'A', 17: 'C', 18: 'X', 19: 'Y', 20: 'B', 21: 'G', 22: 'R', 23: 'W', 24: 'H', 25: 'P', 26: '2', 27: 'I', 28: 'K', 29: 'M', 30: 'U', 31: '3'},
		{0: 'A', 1: 'C', 2: 'X', 3: 'Y', 4: 'B', 5: 'G', 6: 'R', 7: 'W', 8: 'H', 9: 'P', 10: '2', 11: '3', 12: 'I', 13: 'K', 14: 'M', 15: 'U', 16: 'J', 17: '5', 18: '6', 19: 'F', 20: 'T', 21: 'Z', 22: 'L', 23: 'S', 24: 'V', 25: '4', 26: '7', 27: '8', 28: 'D', 29: 'E', 30: 'N', 31: 'Q'},
		{0: 'M', 1: 'U', 2: '3', 3: 'I', 4: 'K', 5: '6', 6: 'J', 7: '5', 8: 'Z', 9: 'F', 10: 'T', 11: 'V', 12: '4', 13: 'L', 14: 'S', 15: 'N', 16: 'Q', 17: '7', 18: '8', 19: 'D', 20: 'E', 21: 'X', 22: 'Y', 23: 'A', 24: 'C', 25: 'R', 26: 'W', 27: 'B', 28: 'G', 29: '2', 30: 'H', 31: 'P'},
		{0: 'I', 1: 'K', 2: 'M', 3: 'U', 4: '3', 5: 'J', 6: '5', 7: '6', 8: 'F', 9: 'T', 10: 'Z', 11: 'L', 12: 'S', 13: 'V', 14: '4', 15: '8', 16: 'D', 17: 'E', 18: 'N', 19: 'Q', 20: '7', 21: 'A', 22: 'C', 23: 'X', 24: 'Y', 25: 'B', 26: 'G', 27: 'R', 28: 'W', 29: 'H', 30: 'P', 31: '2'},
		{0: 'B', 1: 'G', 2: 'R', 3: 'W', 4: 'H', 5: 'P', 6: '2', 7: '3', 8: 'I', 9: 'K', 10: 'M', 11: 'U', 12: 'J', 13: '5', 14: '6', 15: 'F', 16: 'T', 17: 'Z', 18: 'L', 19: 'S', 20: 'V', 21: '4', 22: '7', 23: '8', 24: 'D', 25: 'E', 26: 'N', 27: 'Q', 28: 'A', 29: 'C', 30: 'X', 31: 'Y'},
		{0: 'L', 1: 'S', 2: 'V', 3: '4', 4: '8', 5: 'D', 6: 'E', 7: 'N', 8: 'Q', 9: '7', 10: 'A', 11: 'C', 12: 'X', 13: 'Y', 14: 'B', 15: 'G', 16: 'R', 17: 'W', 18: 'H', 19: 'P', 20: '2', 21: 'I', 22: 'K', 23: 'M', 24: 'U', 25: '3', 26: 'J', 27: '5', 28: '6', 29: 'F', 30: 'T', 31: 'Z'},
		{0: 'B', 1: 'G', 2: 'R', 3: 'W', 4: 'H', 5: 'P', 6: '2', 7: 'I', 8: 'K', 9: 'M', 10: 'U', 11: '3', 12: 'J', 13: '5', 14: '6', 15: 'F', 16: 'T', 17: 'Z', 18: 'L', 19: 'S', 20: 'V', 21: '4', 22: 'D', 23: 'E', 24: 'N', 25: 'Q', 26: '7', 27: '8', 28: 'A', 29: 'C', 30: 'X', 31: 'Y'},
		{0: 'G', 1: 'R', 2: 'W', 3: 'B', 4: 'P', 5: '2', 6: 'H', 7: 'K', 8: 'M', 9: 'U', 10: '3', 11: 'I', 12: '5', 13: '6', 14: 'J', 15: 'T', 16: 'Z', 17: 'F', 18: 'S', 19: 'V', 20: '4', 21: 'L', 22: 'E', 23: 'N', 24: 'Q', 25: '7', 26: '8', 27: 'D', 28: 'C', 29: 'X', 30: 'Y', 31: 'A'},
		{0: 'W', 1: 'B', 2: 'G', 3: 'R', 4: 'H', 5: 'P', 6: '2', 7: 'U', 8: '3', 9: 'I', 10: 'K', 11: 'M', 12: 'J', 13: '5', 14: '6', 15: 'F', 16: 'T', 17: 'Z', 18: '4', 19: 'L', 20: 'S', 21: 'V', 22: 'Q', 23: '7', 24: '8', 25: 'D', 26: 'E', 27: 'N', 28: 'Y', 29: 'A', 30: 'C', 31: 'X'},
		{0: 'F', 1: 'T', 2: 'Z', 3: 'L', 4: 'S', 5: 'V', 6: '4', 7: '8', 8: 'D', 9: 'E', 10: 'N', 11: 'Q', 12: '7', 13: 'A', 14: 'C', 15: 'X', 16: 'Y', 17: 'B', 18: 'G', 19: 'R', 20: 'W', 21: 'H', 22: 'P', 23: '2', 24: 'I', 25: 'K', 26: 'M', 27: 'U', 28: '3', 29: 'J', 30: '5', 31: '6'},
		{0: 'U', 1: '3', 2: 'I', 3: 'K', 4: 'M', 5: 'J', 6: '5', 7: '6', 8: 'F', 9: 'T', 10: 'Z', 11: '4', 12: 'L', 13: 'S', 14: 'V', 15: 'Q', 16: '7', 17: '8', 18: 'D', 19: 'E', 20: 'N', 21: 'Y', 22: 'A', 23: 'C', 24: 'X', 25: 'W', 26: 'B', 27: 'G', 28: 'R', 29: 'H', 30: 'P', 31: '2'},
		{0: 'I', 1: 'K', 2: 'M', 3: 'U', 4: '3', 5: 'J', 6: '5', 7: '6', 8: 'F', 9: 'T', 10: 'Z', 11: 'L', 12: 'S', 13: 'V', 14: '4', 15: 'D', 16: 'E', 17: 'N', 18: 'Q', 19: '7', 20: '8', 21: 'A', 22: 'C', 23: 'X', 24: 'Y', 25: 'B', 26: 'G', 27: 'R', 28: 'W', 29: 'H', 30: 'P', 31: '2'},
		{0: 'T', 1: 'Z', 2: 'F', 3: 'S', 4: 'V', 5: '4', 6: 'L', 7: 'E', 8: 'N', 9: 'Q', 10: '7', 11: '8', 12: 'D', 13: 'C', 14: 'X', 15: 'Y', 16: 'A', 17: 'G', 18: 'R', 19: 'W', 20: 'B', 21: 'P', 22: '2', 23: 'H', 24: 'K', 25: 'M', 26: 'U', 27: '3', 28: 'I', 29: '5', 30: '6', 31: 'J'},
		{0: 'H', 1: 'P', 2: '2', 3: 'I', 4: 'K', 5: 'M', 6: 'U', 7: '3', 8: 'J', 9: '5', 10: '6', 11: 'F', 12: 'T', 13: 'Z', 14: 'L', 15: 'S', 16: 'V', 17: '4', 18: '8', 19: 'D', 20: 'E', 21: 'N', 22: 'Q', 23: '7', 24: 'A', 25: 'C', 26: 'X', 27: 'Y', 28: 'B', 29: 'G', 30: 'R', 31: 'W'},
		{0: '4', 1: 'L', 2: 'S', 3: 'V', 4: 'Q', 5: '7', 6: '8', 7: 'D', 8: 'E', 9: 'N', 10: 'Y', 11: 'A', 12: 'C', 13: 'X', 14: 'W', 15: 'B', 16: 'G', 17: 'R', 18: 'H', 19: 'P', 20: '2', 21: 'U', 22: '3', 23: 'I', 24: 'K', 25: 'M', 26: 'J', 27: '5', 28: '6', 29: 'F', 30: 'T', 31: 'Z'},
	}

	//inviteCodeValues = map[rune]uint64{
	//	'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4,
	//}
	inviteCodeBaseNumber uint64 = 10000

	ErrMustGreaterThanZero = "uid must greater than zero"
)

func inviteMagicID(id uint64) uint64 {
	return (id % 10) * inviteCodeBaseNumber
}

// CreateInviteCode 创建邀请码
// arrIdxDep 用来选择 inviteCodeNames的哪一行
// id 唯一id
func CreateInviteCode(arrIdxDep int64, id uint64) (string, error) {
	if id <= 0 {
		return "", errors.New(ErrMustGreaterThanZero)
	}
	arrIndex := int(arrIdxDep % int64(len(inviteCodeNames)))
	var mod uint64 = 0
	id += inviteMagicID(id)
	var result []rune
	for id > 0 {
		mod = id % inviteCodeDiv
		id = id / inviteCodeDiv
		result = append(result, inviteCodeNames[arrIndex][mod])
	}
	// 最少4位
	for len(result) < 4 {
		result = append(result, '9')
	}

	return string(result), nil
}

//
//func InviteCodeDecode(inviteCode string) uint64 {
//	var id uint64 = 0
//	r := []rune(inviteCode)
//	for l := len(r) - 1; l >= 0; l-- {
//		id = id*inviteCodeDiv + inviteCodeValues[r[l]]
//	}
//	return id - inviteMagicID(id)
//}
